{"cells":[{"cell_type":"code","metadata":{},"source":"%%configure -n project.spark.fine-grained\n{\n    \"number_of_workers\": 4,\n    \"session_type\": \"etl\",\n    \"glue_version\": \"5.0\",\n    \"worker_type\": \"G.1X\",\n    \"idle_timeout\": 5,\n    \"timeout\": 60,\n    \"--enable-glue-datacatalog\": \"true\",\n    \"--enable-auto-scaling\": \"true\",\n    \"--project_s3_path\": \"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev\",\n    \"--redshift_iam_role\": \"arn:aws:iam::825765423553:role/datazone_usr_role_4cmygnn241c1zv_b3yw4gwf0iz6or\",\n    \"--redshift_tempdir\": \"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev/redshift-tmp/\",\n    \"--enable-lakeformation-fine-grained-access\": \"true\",\n    \"--datalake-formats\": \"iceberg\"\n}","execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{},"source":"%%pyspark project.spark.fine-grained\nimport sys\nfrom awsglue.transforms import *\nfrom pyspark.context import SparkContext\nfrom pyspark.sql import SparkSession\nfrom connectivity.adapter import CatalogConnectionHelper\n\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.sql.functions import *\nfrom awsglue.context import GlueContext\nfrom awsglue.job import Job\nimport json","execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{},"source":"%%pyspark project.spark.fine-grained\nsc = SparkContext.getOrCreate()\nspark = SparkSession.builder.getOrCreate()\n","execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{},"source":"%%pyspark itau-sm-demo-rds-connection\nfrom connectivity.adapter import CatalogConnectionHelper\n\n# Script generated for node ConnectionV2DataSource\nConnectionV2DataSource_17418634837282_additional_options = {\"dbtable\": \"registration.customer\"}\nConnectionV2DataSource_17418634837282 = CatalogConnectionHelper(spark).read(\"postgresql\", \"itau-sm-demo-rds-connection\", ConnectionV2DataSource_17418634837282_additional_options)","execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{},"source":"%%pyspark project.spark\ndef get_table_columns(spark, database_name, table_name):\n    schema_df = spark.sql(f\"DESCRIBE `{database_name}`.`{table_name}`\").collect()\n\n    # Check if '# Partition Information' is present\n    partition_info_exists = any(row.col_name == '# Partition Information' for row in schema_df)\n\n    if partition_info_exists:\n        # Find the index where partition information starts\n        partition_index = next(i for i, row in enumerate(schema_df) if row.col_name == '# Partition Information')\n        all_columns = [row.col_name for row in schema_df[:partition_index] if row.col_name]\n    else:\n        all_columns = [row.col_name for row in schema_df if row.col_name]\n\n    return all_columns\n\n\n# Script generated for node CatalogDataSink\nall_columns = get_table_columns(spark, \"glue_db_aw53flfpa5qkyj\", \"customer\")\n# enforce the column number and column order by getting all column names from DESCRIBE TABLE query and doing a select first.\nassert len(ConnectionV2DataSource_17418634837282.columns) == len(all_columns), \"the input df has different col number than the target catalog table.\"\nConnectionV2DataSource_17418634837282.select(all_columns).write.insertInto(\"`glue_db_aw53flfpa5qkyj`.`customer`\")","execution_count":0,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.14"},"maxdomeModel":{"nodes":[{"type":"MaxDomeBasicNode","id":"1741864340865","position":{"x":572.6900340022687,"y":0},"data":{"label":"Amazon SageMaker Lakehouse","nodeDescription":"Write into a table in your Lakehouse catalogs.","iconName":"lakehouse_colored","type":"dataSinkSPARK_GLUE","classification":"DataSink","senseiType":"Catalog","inputShape":{"total":1},"fields":[{"fieldName":"options","fieldLabel":"Options","type":"custom","customType":"glueSinkSelector","value":{"catalog":"default","database":"glue_db_aw53flfpa5qkyj","table":"customer"},"validator":{"_def":{"unknownKeys":"strip","catchall":{"_def":{"typeName":"ZodNever"}},"typeName":"ZodObject"},"_cached":{"shape":{"catalog":{"_def":{"checks":[{"kind":"min","value":1,"message":"Required"}],"typeName":"ZodString","coerce":false}},"database":{"_def":{"checks":[{"kind":"min","value":1,"message":"Required"}],"typeName":"ZodString","coerce":false}},"table":{"_def":{"checks":[{"kind":"regex","regex":{}},{"kind":"min","value":1,"message":"Required"}],"typeName":"ZodString","coerce":false}}},"keys":["catalog","database","table"]}}}]},"measured":{"width":225,"height":56},"selected":true,"dragging":false},{"type":"MaxDomeBasicNode","id":"17418634837282","position":{"x":0,"y":0},"data":{"label":"PostgreSQL","nodeDescription":"Connect to PostgreSQL.","connectionType":"postgresql","iconName":"code","type":"dataSourcepostgresql","classification":"DataSource","senseiType":"ConnectionV2","inputShape":{"total":0},"fields":[{"fieldName":"connectionType","fieldLabel":"Type","type":"custom","customType":"readonlyConnectionType","validator":{"_def":{"checks":[{"kind":"min","value":1,"message":"Required"}],"typeName":"ZodString","coerce":false}},"value":"postgresql"},{"fieldName":"connectionName","fieldLabel":"Name","type":"custom","customType":"catalogConnectionSelector","validator":{"_def":{"checks":[{"kind":"min","value":1,"message":"Required"}],"typeName":"ZodString","coerce":false}},"value":"itau-sm-demo-rds-connection"},{"fieldName":"additionalOptions","fieldLabel":"Additional Options Form","type":"custom","customType":"additionalOptionsForm","validator":{"_def":{"keyType":{"_def":{"checks":[],"typeName":"ZodString","coerce":false}},"valueType":{"_def":{"checks":[],"typeName":"ZodString","coerce":false}},"typeName":"ZodRecord"}},"value":{"manualSchema":"registration","manualTable":"customer"}}],"provider":"connectivity","iconURL":"https://d3uyo4d2ey5imr.cloudfront.net/POSTGRESQL.svg"},"targetPosition":"left","sourcePosition":"right","measured":{"width":225,"height":56},"selected":false}],"edges":[{"source":"17418634837282","sourceHandle":"17418634837282-right-source","target":"1741864340865","targetHandle":"1741864340865-left-target","id":"17418634837282-1741864340865","type":"custom","data":{"hovering":false},"markerEnd":{"type":"arrowclosed"}}],"direction":"horizontal","engine":"Glue","viewport":{"x":263.92421285527655,"y":162.6442696044068,"zoom":1.4641121239672785},"interactiveSessionModel":{"additionalPythonModules":"","connections":[],"extraJars":[],"glueVersion":"5.0","extraPyFiles":[],"iamRole":"","numberOfWorkers":1,"sessionType":"etl","tags":{},"workerType":"G.025X","command":{"name":"glueetl","pythonVersion":"3"},"timeout":60,"idleTimeout":15},"name":"","version":"1.0.0","schemasMap":[["17418634837282",{"type":"struct","fields":[]}]],"datasamplesMap":[["17418634837282",[]]],"statementsMap":[["17418634837282",{"nodeId":"17418634837282","codeSnippet":"from connectivity.adapter import CatalogConnectionHelper\n\n# Script generated for node ConnectionV2DataSource\nConnectionV2DataSource_17418634837282_additional_options = {\"dbtable\": \"registration.customer\"}\nConnectionV2DataSource_17418634837282 = CatalogConnectionHelper(spark).read(\"postgresql\", \"itau-sm-demo-rds-connection\", ConnectionV2DataSource_17418634837282_additional_options)","executionState":"STALE","executorCode":["from connectivity.adapter import CatalogConnectionHelper\n\n# Script generated for node ConnectionV2DataSource\nConnectionV2DataSource_17418634837282_additional_options = {\"dbtable\": \"registration.customer\"}\nConnectionV2DataSource_17418634837282 = CatalogConnectionHelper(spark).read(\"postgresql\", \"itau-sm-demo-rds-connection\", ConnectionV2DataSource_17418634837282_additional_options)","outputConnectionV2DataSource_17418634837282 = json.dumps({\"Schema\": ConnectionV2DataSource_17418634837282.schema.jsonValue(), \"DataSample\": [row.asDict() for row in ConnectionV2DataSource_17418634837282.take(100)]}, indent=2, sort_keys=True, default=str)","print(outputConnectionV2DataSource_17418634837282)"]}]],"createSessionRequest":{"Role":"arn:aws:iam::825765423553:role/datazone_usr_role_4cmygnn241c1zv_b3yw4gwf0iz6or","Connections":{"Connections":["datazone-glue-network-connection-4cmygnn241c1zv-dev"]},"Command":{"Name":"glueetl","PythonVersion":"3"},"DefaultArguments":{"--enable-glue-datacatalog":"true","--enable-auto-scaling":"true","--project_s3_path":"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev","--redshift_iam_role":"arn:aws:iam::825765423553:role/datazone_usr_role_4cmygnn241c1zv_b3yw4gwf0iz6or","--redshift_tempdir":"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev/redshift-tmp/","--enable-lakeformation-fine-grained-access":"true","--datalake-formats":"iceberg","--conf":"spark.sql.defaultCatalog=spark_catalog --conf spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions --conf spark.datasource.redshift.community.glue_endpoint=https://glue.sa-east-1.amazonaws.com --conf spark.datasource.redshift.community.data_api_endpoint=https://redshift-data.sa-east-1.amazonaws.com --conf spark.hadoop.fs.s3.impl=com.amazon.ws.emr.hadoop.fs.EmrFileSystem --conf spark.sql.catalog.spark_catalog=org.apache.iceberg.spark.SparkSessionCatalog --conf spark.sql.catalog.spark_catalog.catalog-impl=org.apache.iceberg.aws.glue.GlueCatalog --conf spark.sql.catalog.spark_catalog.glue.id=825765423553 --conf spark.sql.catalog.spark_catalog.glue.endpoint=https://glue.sa-east-1.amazonaws.com --conf spark.sql.catalog.spark_catalog.client.region=sa-east-1"},"GlueVersion":"5.0","RequestOrigin":"SageMakerUnifiedStudio_VisualETLDataPreview","Timeout":60,"IdleTimeout":15,"NumberOfWorkers":4,"WorkerType":"G.1X","Tags":{"AmazonDataZoneEnvironment":"b3yw4gwf0iz6or","AmazonDataZoneProject":"4cmygnn241c1zv","AmazonDataZoneDomain":"dzd_cjfgk2iz50fxp7"}},"createSessionAdhocRequest":{"DefaultArguments":{"--enable-glue-datacatalog":"true","--enable-auto-scaling":"true","--project_s3_path":"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev","--redshift_iam_role":"arn:aws:iam::825765423553:role/datazone_usr_role_4cmygnn241c1zv_b3yw4gwf0iz6or","--redshift_tempdir":"s3://amazon-sagemaker-825765423553-sa-east-1-dac29af4cfb9/dzd_cjfgk2iz50fxp7/4cmygnn241c1zv/dev/redshift-tmp/","--enable-lakeformation-fine-grained-access":"true","--datalake-formats":"iceberg","--conf":"spark.sql.defaultCatalog=spark_catalog --conf spark.sql.extensions=org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions --conf spark.datasource.redshift.community.glue_endpoint=https://glue.sa-east-1.amazonaws.com --conf spark.datasource.redshift.community.data_api_endpoint=https://redshift-data.sa-east-1.amazonaws.com --conf spark.hadoop.fs.s3.impl=com.amazon.ws.emr.hadoop.fs.EmrFileSystem --conf spark.sql.catalog.spark_catalog=org.apache.iceberg.spark.SparkSessionCatalog --conf spark.sql.catalog.spark_catalog.catalog-impl=org.apache.iceberg.aws.glue.GlueCatalog --conf spark.sql.catalog.spark_catalog.glue.id=825765423553 --conf spark.sql.catalog.spark_catalog.glue.endpoint=https://glue.sa-east-1.amazonaws.com --conf spark.sql.catalog.spark_catalog.client.region=sa-east-1"}},"dpSettings":{"autoImportLibs":true,"autoRestart":false,"sampleSize":100},"computeConnection":{"configurations":[{"classification":"GlueDefaultArgument","properties":{"--enable-lakeformation-fine-grained-access":"true"}}],"domainIdentifier":"dzd_cjfgk2iz50fxp7","projectIdentifier":"4cmygnn241c1zv","environmentIdentifier":"b3yw4gwf0iz6or","connectionIdentifier":"b482oasfwcqs9n","name":"project.spark.fine-grained","type":"SPARK","authorizationMode":"PROJECT","provisioningType":"MANAGED","location":{"awsRegion":"sa-east-1","awsAccountId":"825765423553"},"physicalEndpoints":[{"awsLocation":{"awsAccountId":"825765423553","awsRegion":"sa-east-1"},"glueConnectionName":"datazone-glue-network-connection-4cmygnn241c1zv-dev"}],"sparkGlueProperties":{"glueConnection":{},"sessionConfigs":{"idle_timeout":60,"glue_version":"5.0","worker_type":"G.1X","number_of_workers":10}}}}},"nbformat":4,"nbformat_minor":5}